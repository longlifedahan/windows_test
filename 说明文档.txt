1.使用面向对象的思想，模拟现实世界中的银行、账号、ATM等对象，其中类里面应该包含字段、属性、方法、索引器等，并注意使用修饰符；
2.使用继承，继承账号（Account类）得到一个子类（如信用账号），增加字段（如信用额度）、属性、方法，覆盖（Override）一些方法；
3.使用事件和委托，实现一个事件BigMoneyFetched（取走大笔金额），即ATM机操作时如果用户取款数大于10000元，则可以激活该事件。事件的参数也是一个对象（可以定义类BigMoneyArgs），含有账号及当时的取款数。在程序中注册该事件，使之能在界面中显示告警信息。
5.程序中使用自定义异常，比如定义一个异常类BadCashException，表示有坏的钞票，在程序中适当的地方（比如使用Random模拟坏钞率为30%左右）抛出自定义的异常类，在ATM调用时捕获该异常。
可在程序中适当使用接口、结构、枚举等语法成分。

说明
1.
银行类Bank定义在MyClass.cs文件中的13-55行
账号类Account定义在MyClass.cs文件中的57-114行
ATM机类ATM定义在MyClass.cs文件中的116-156行
2.
CreditAccount类继承自Account类，在MyClass.cs文件中的158-180行
3.
事件参数类BigMoneyArgs定义在MyClass.cs文件中的182-192行
委托类BigMoneyEventHandler定义在Form1.cs文件中的23行
事件类Bigmoney定义在Form1.cs文件中的24行
事件处理方法BigMoneyAppear定义在Form1.cs文件中的128-131行
事件Bigmoney注册于在Form1.cs文件中的37行
事件产生于Form1.cs文件中的101-102行
4.
异常类BadCashException定义在MyClass.cs文件中的194-200行
异常类BadCashException抛出在Form1.cs文件中的88-96行

